name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Install UV
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: uv sync --all-extras --dev
    
    - name: Run linting
      run: |
        uv run ruff check .
        uv run black --check .
        uv run isort --check-only .
    
    - name: Run type checking
      run: uv run mypy langextract_anthropic
    
    - name: Run unit tests
      run: uv run pytest tests/test_provider_unit.py -v
    
    - name: Run parameter filtering tests
      run: uv run python tests/test_parameter_filtering.py
    
    - name: Run tests with coverage
      run: uv run pytest tests/ --cov=langextract_anthropic --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install UV
      uses: astral-sh/setup-uv@v3
    
    - name: Set up Python
      run: uv python install 3.11
    
    - name: Install dependencies
      run: uv sync
    
    - name: Build package
      run: uv build
    
    - name: Validate build
      run: python scripts/check_build.py
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-files
        path: dist/

  integration-test:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install UV
      uses: astral-sh/setup-uv@v3
    
    - name: Set up Python
      run: uv python install 3.11
    
    - name: Install dependencies
      run: uv sync --dev
    
    - name: Run Anthropic integration tests
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      run: |
        if [ -n "$ANTHROPIC_API_KEY" ]; then
          echo "Running integration tests with Anthropic API"
          uv run python tests/test_anthropic_parameters.py
        else
          echo "Skipping integration tests - no Anthropic API key"
        fi